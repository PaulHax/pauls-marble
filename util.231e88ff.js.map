{"version":3,"sources":["planet/util.js"],"names":["window","SS","util","clamp","number","from","to","Math","max","min","randomInt","seed","floor","randomFloat","random","scope","MAX","pow","a","c","seeds","key","undefined","numeric","numberFromString","series","lastRandom","newRandom","resetRandomSeries","prefix","toBeCleared","i","indexOf","push","makeSpecifiedArray1D","size","value","array","valueFloat","x","N","G","Float32Array","P","Uint32Array","random4","j","k","EditorCamera","camera","document","startRadius","cameraStartPos","originObject","mouseDown","startExp","radius","position","THREE","Vector3","Vector2","PI","cameraPos","clone","mouseClickPos","editorCamera","getScaledRadius","exp","zoomCamera","normalize","multiplyScalar","rotateCamera","y","sin","z","cos","lookAt","add","addEventListener","event","mousePos","clientX","clientY","diff","sub","delta","wheelDelta","addResizeListener","renderer","setSize","innerWidth","innerHeight","aspect","updateProjectionMatrix","computeGeometry","geometry","computeVertexNormals","computeFaceNormals","computeMorphNormals","computeBoundingSphere","computeBoundingBox","verticesNeedUpdate","elementsNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","tangentsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","buffersNeedUpdate","groupsNeedUpdate","trilinearInterpolation","coordFloat","scalarField","interpolation","b","coord0","coord1","xd","yd","zd","c00","c10","c01","c11","c0","c1","nearestNeighbour","tricosineInterpolation","ft","f","heightToNormalMap","map","intensity","width","image","height","nofPixels","getHeight","data","Uint8Array","normalMap","DataTexture","RGBFormat","pixel00","pixel01","orto","cross"],"mappings":"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","file":"util.231e88ff.js","sourceRoot":"..\\src","sourcesContent":["\"use strict\";\n\nwindow.SS = window.SS || {};\nSS.util = SS.util || {};\n\nSS.util.clamp = function(number, from, to) {\n\treturn Math.max(Math.min(number, to), from);\n}\n\nSS.util.randomInt = function(from, to, seed) {\n\treturn Math.floor(SS.util.randomFloat(from, to+1, seed));\n}\n\nSS.util.randomFloat = function(from, to, seed) {\n\treturn SS.util.random(seed)*(to-from)+from;\n}\n\nSS.util.random = function(seed) {\n\tvar scope = SS.util.random;\n\t\n\tscope.MAX = scope.MAX || Math.pow(2, 32);\n\tscope.a = 1664525;\n\tscope.c = 1013904223;\n\t\n\tscope.seeds = scope.seeds || {};\n\n\tseed = seed || 0;\n\tvar key = seed;\n\tif (typeof seed == \"string\") {\n\t\tif (scope.seeds[seed] == undefined) {\n\t\t\tvar numeric = SS.util.numberFromString(seed);\n\t\t\tscope.seeds[seed] = numeric; // Memoization\n\t\t\tseed = numeric;\n\t\t} else {\n\t\t\tseed = scope.seeds[seed];\n\t\t}\n\t} \n\tscope.series = scope.series || {};\n\tscope.series[key] = scope.series[key] || seed;\n\t\n\tvar lastRandom = scope.series[key];\n\tvar newRandom = (scope.a * lastRandom + scope.c) % scope.MAX;\n\t\n\tscope.series[key] = newRandom;\n\t\n\treturn newRandom/scope.MAX;\n}\n\nSS.util.resetRandomSeries = function(prefix) {\n\tvar toBeCleared = [];\n\tfor (var i in SS.util.random.series) {\n\t\tif (i.indexOf(prefix) == 0) toBeCleared.push(i);\n\t}\n\tfor (var i in toBeCleared) {\n\t\tdelete SS.util.random.series[toBeCleared[i]];\n\t}\n}\n\nSS.util.makeSpecifiedArray1D = function(size, value, array) {\n\tvar valueFloat = value;\n\tfor (var x = 0; x < size; x++) {\n\t\tif (typeof(value) == \"function\") valueFloat = value(x);\n\t\tarray[x] = valueFloat;\n\t}\n\treturn array;\n}\n\nwindow.N = 256*256;\nwindow.G = SS.util.makeSpecifiedArray1D(N, Math.random, new Float32Array(N));\nwindow.P = SS.util.makeSpecifiedArray1D(N, function() {return SS.util.randomInt(0, N-1)}, new Uint32Array(N));\n\nSS.util.random4 = function(i, j, k) {\n\treturn G[(i + P[(j + P[k % N]) % N]) % N];\n}\n\nSS.util.EditorCamera = function(camera, document, startRadius, cameraStartPos, originObject) {\n\tthis.camera = camera;\n\tthis.mouseDown = false;\n\tthis.startRadius = startRadius || 20;\n\tthis.startExp = 6;\n\tthis.radius = this.startExp;\n\tthis.originObject = originObject || {position: new THREE.Vector3()};\n\tthis.cameraStartPos = cameraStartPos || new THREE.Vector2(Math.PI/8, -Math.PI/4);\n\tthis.cameraPos = this.cameraStartPos.clone();\n\tthis.mouseClickPos = new THREE.Vector2();\n\t\n\tvar editorCamera = this;\n\t\n\tvar addEventListeners = function() {\n\t\tdocument.addEventListener('mousemove', function(event) {\n\t\t\tvar mousePos = new THREE.Vector2(event.clientX, event.clientY);\n\t\t\tif (editorCamera.mouseDown == true) {\n\t\t\t\tvar diff = mousePos.clone().sub(editorCamera.mouseClickPos).multiplyScalar(1/250);\n\t\t\t\teditorCamera.cameraPos = editorCamera.cameraStartPos.clone().add(diff);\n\t\t\t\teditorCamera.rotateCamera();\n\t\t\t}\n\t\t});\n\t\t\n\t\tdocument.addEventListener('mousewheel', function(event) {\n\t\t\tvar delta = event.wheelDelta/20000;\n\t\t\tif (editorCamera.getScaledRadius(editorCamera.radius - delta) >= 0) {\n\t\t\t\teditorCamera.radius -= delta;\n\t\t\t\teditorCamera.zoomCamera();\n\t\t\t}\n\t\t});\n\t\t\n\t\tdocument.addEventListener('mousedown', function(event) {\n\t\t\tvar mousePos = new THREE.Vector2(event.clientX, event.clientY);\t\t\t\n\t\t\teditorCamera.mouseClickPos = mousePos;\n\t\t\teditorCamera.mouseDown = true;\n\t\t});\n\t\t\n\t\tdocument.addEventListener('mouseup', function(event) {\n\t\t\teditorCamera.cameraStartPos = editorCamera.cameraPos;\n\t\t\teditorCamera.mouseDown = false;\n\t\t});\n\t}\n\n\t\n\tthis.getScaledRadius = function(radius) {\n\t\treturn Math.exp(radius) - Math.exp(this.startExp) + this.startRadius\n\t}\n\t\n\tthis.zoomCamera = function() {\n\t\tthis.camera.position.normalize().multiplyScalar(this.getScaledRadius(this.radius));\n\t}\n\t\n\tthis.rotateCamera = function() {\n\t\tthis.camera.position.y = -this.cameraPos.y;\n\t\tthis.camera.position.x = Math.sin(this.cameraPos.x);\n\t\tthis.camera.position.z = Math.cos(this.cameraPos.x);\n\t\t\n\t\tthis.zoomCamera();\n\t\t\n\t\tthis.camera.lookAt(new THREE.Vector3(0, 0, 0));\n\t\t\n\t\tthis.camera.position.add(this.originObject.position);\n\t}\n\t\n\taddEventListeners();\n\tthis.rotateCamera();\n}\n\nSS.util.addResizeListener = function() {\n\twindow.addEventListener('resize', function() {\n\t\trenderer.setSize(window.innerWidth, window.innerHeight);\n\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\tcamera.updateProjectionMatrix();\n\t});\n}\n\nSS.util.computeGeometry = function(geometry) {\n\t// geometry.makeGroups();\n\tgeometry.computeVertexNormals()\n\tgeometry.computeFaceNormals();\n\tgeometry.computeMorphNormals();\n\tgeometry.computeBoundingSphere();\n\tgeometry.computeBoundingBox();\n\t// geometry.computeLineDistances();\n\t\n\tgeometry.verticesNeedUpdate = true;\n\tgeometry.elementsNeedUpdate = true;\n\tgeometry.uvsNeedUpdate = true;\n\tgeometry.normalsNeedUpdate = true;\n\tgeometry.tangentsNeedUpdate = true;\n\tgeometry.colorsNeedUpdate = true;\n\tgeometry.lineDistancesNeedUpdate = true;\n\tgeometry.buffersNeedUpdate = true;\n\tgeometry.groupsNeedUpdate = true;\n}\n\nSS.util.trilinearInterpolation = function(coordFloat, scalarField, interpolation) {\n\tinterpolation = interpolation || function(a, b, x) {\n\t\treturn  a*(1-x) + b*x;\n\t}\t\n\n\tvar coord0 = {x: Math.floor(coordFloat.x), y: Math.floor(coordFloat.y), z: Math.floor(coordFloat.z)};\n\tvar coord1 = {x: coord0.x+1, y: coord0.y+1, z: coord0.z+1};\n\tvar xd = (coordFloat.x - coord0.x)/Math.max(1, (coord1.x-coord0.x));\n\tvar yd = (coordFloat.y - coord0.y)/Math.max(1, (coord1.y-coord0.y));\n\tvar zd = (coordFloat.z - coord0.z)/Math.max(1, (coord1.z-coord0.z));\n\tvar c00 = interpolation(scalarField(coord0.x, coord0.y, coord0.z), scalarField(coord1.x, coord0.y, coord0.z), xd);\n\tvar c10 = interpolation(scalarField(coord0.x, coord1.y, coord0.z), scalarField(coord1.x, coord1.y, coord0.z), xd);\n\tvar c01 = interpolation(scalarField(coord0.x, coord0.y, coord1.z), scalarField(coord1.x, coord0.y, coord1.z), xd);\n\tvar c11 = interpolation(scalarField(coord0.x, coord1.y, coord1.z), scalarField(coord1.x, coord1.y, coord1.z), xd);\n\tvar c0 = interpolation(c00, c10, yd);\n\tvar c1 = interpolation(c01, c11, yd);\n\tvar c = interpolation(c0, c1, zd);\n\t\n\treturn c;\n}\n\nSS.util.nearestNeighbour = function(coordFloat, scalarField) {\n\treturn scalarField(Math.floor(coordFloat.x), Math.floor(coordFloat.y), Math.floor(coordFloat.z));\n}\n\nSS.util.tricosineInterpolation = function(coordFloat, scalarField) {\n\tvar interpolation = function(a, b, x) {\n\t\tvar ft = x * 3.1415927;\n\t\tvar f = (1 - Math.cos(ft)) * 0.5;\n\t\treturn  a*(1-f) + b*f\n\t}\n\t\n\treturn SS.util.trilinearInterpolation(coordFloat, scalarField, interpolation);\n}\n\nSS.util.heightToNormalMap = function(map, intensity) {\n    var width = map.image.width;\n\tvar height = map.image.height;\n\tvar nofPixels = width*height;\n    \n    intensity = intensity || 1.0;\n    \n    var getHeight = function(x, y) {\n        x = Math.min(x, width-1);\n        y = Math.min(y, height-1);\n        return (\n            map.image.data[(y*width+x)*4+0]/255 + \n            map.image.data[(y*width+x)*4+1]/255 +\n            map.image.data[(y*width+x)*4+2]/255\n        )/3*intensity;\n    }\n    \n\t\t// var normalMap = THREE.ImageUtils.generateDataTexture(width, height, new THREE.Color(0x000000));\n\t\tvar size = width * height;\n\t\tvar data = new Uint8Array( 3 * size );\n\t\tvar normalMap = new THREE.DataTexture( data, width, height, THREE.RGBFormat );\n\n\tfor (var i = 0; i < nofPixels; i++) {\t\t\n\t\tvar x = i%width;\n\t\tvar y = height-Math.floor(i/width);\n\t\t\n        var pixel00 = new THREE.Vector3(0, 0, getHeight(x, y));\n        var pixel01 = new THREE.Vector3(0, 1, getHeight(x, y+1));\n        var pixel10 = new THREE.Vector3(1, 0, getHeight(x+1, y));\n        var orto = pixel10.sub(pixel00).cross(pixel01.sub(pixel00)).normalize();\n        \n        normalMap.image.data[i*3+0] = (orto.x/2+0.5)*255;\n\t\tnormalMap.image.data[i*3+1] = (orto.y/2+0.5)*255;\n\t\tnormalMap.image.data[i*3+2] = (orto.z/2+0.5)*255;\n    }\n    \n    return normalMap;\n}"]}